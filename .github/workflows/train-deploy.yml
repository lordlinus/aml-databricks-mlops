name: Train-Model-DBX-and-Deploy-to-AKS

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "train"
  train:
    environment:
      name: staging
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # specify the environment variables
    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      MODEL_NAME: "ss-lightgbm-model"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7.5
      - name: Install pip
        run: |
          python -m pip install --upgrade pip
      # - name: Install OS components
      #   shell: sh
      #   run: sudo apt-get install -y jq

      - name: Install dependencies and project in dev mode
        run: |
          pip install -r unit-requirements.txt
          pip install -e .
      - name: Upload local notebook
        run: |
          databricks workspace import_dir -o -e code/train /Shared/model_01
      - name: Delete existing job with the same name
        run: |
          databricks jobs configure --version=2.1
          JOB_ID=$(databricks jobs list --output JSON | jq -c ".jobs[] | select(.settings.name == \"databricks-train-model-01\") | .job_id")
          databricks jobs delete --job-id $JOB_ID
        continue-on-error: true
      - name: create-databricks-job
        run: |
          databricks jobs configure --version=2.1
          databricks jobs create --json-file code/train/deployment.json
      - name: dbx-list-jobs
        run: |
          databricks jobs configure --version=2.1
          databricks jobs list
      - name: dbx-job-run
        id: mljobid
        run: |
          databricks jobs configure --version=2.1
          JOB_ID=$(databricks jobs list --output JSON | jq -c ".jobs[] | select(.settings.name == \"databricks-train-model-01\") | .job_id")
          databricks jobs run-now --job-id JOB_ID
      - name: azure login
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: setup
        run: bash setup.sh
        working-directory: code
        continue-on-error: true

  deploy:
    environment:
      name: production
    runs-on: ubuntu-latest
    needs: train
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v2

      # Connect or Create the Azure Machine Learning Workspace
      - name: Connect/Create Azure Machine Learning Workspace
        id: aml_workspace
        uses: Azure/aml-workspace@v1
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

      - name: setup
        run: bash setup.sh
        working-directory: code
        continue-on-error: true

      # Deploy model in Azure Machine Learning to ACI
      - name: Deploy model
        id: aml_deploy
        uses: Azure/aml-deploy@v1
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          model_name: "ss-lightgbm-model"
          model_version: "latest"
          parameters_file: "deploy.json"
