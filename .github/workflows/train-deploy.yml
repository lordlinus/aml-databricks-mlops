name: Train-Model-DBX-and-Deploy-to-AKS

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "train"
  train:
    environment:
      name: staging
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      output1: ${{steps.mljobid.outputs.output1}}

    # specify the environment variables
    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      MODEL_NAME: "ss-lightgbm-model"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7.5

      - name: Install pip
        run: |
          python -m pip install --upgrade pip

      - name: Install dependencies and project in dev mode
        run: |
          pip install -r unit-requirements.txt
          pip install -e .

      - name: dbx-list-jobs
        run: |
          databricks jobs list

      - name: dbx-job-run
        id: mljobid
        run: |
          dbx_exec=$(databricks jobs run-now --job-id 1629)
          echo "run_id=$dbx_exec"
      
      - name: azure login
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: setup
        run: bash setup.sh
        working-directory: code
        continue-on-error: true

      - name: print-run_id
        run: echo "${{env.GITHUB_ENV}}"
  
  deploy:
    environment:
      name: production
    runs-on: ubuntu-latest
    needs: train
    steps:
      - name: print-run_id
        run: echo "${{env.MODEL_NAME}}"

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v2

      # Connect or Create the Azure Machine Learning Workspace
      - name: Connect/Create Azure Machine Learning Workspace
        id: aml_workspace
        uses: Azure/aml-workspace@v1
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

      - name: setup
        run: bash setup.sh
        working-directory: code
        continue-on-error: true


      # # Register model in Azure Machine Learning model registry
      # - name: Register model
      #   id: aml_registermodel
      #   uses: Azure/aml-registermodel@v1
      #   with:
      #       azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
      #       run_id:  ${{ steps.aml_run.outputs.run_id }}
      #       experiment_name: ${{ steps.aml_run.outputs.experiment_name }}

      # Download model from the Model Registry into the Pipeline VM: Add task of type 'Azure CLI'
      # - name: Download model
      #   id: aml_download
      #   uses: Azure

      # Deploy model in Azure Machine Learning to ACI
      - name: Deploy model
        id: aml_deploy
        uses: Azure/aml-deploy@v1
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          model_name: "ss-lightgbm-model"
          model_version: "latest"
          parameters_file: "deploy.json"
